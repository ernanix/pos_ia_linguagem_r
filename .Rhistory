cidades
cidades["Paris","Madri"] <-1273
cidades
shell("cls")
source("D:/Cursos/Pos_IA/linguagem_r/Aula1.R")
cidades
cidades[1,2]
cidades[2,1]
cidades [1,] <- cidades[,1]
cidades
shell("cls")
source("D:/Cursos/Pos_IA/linguagem_r/Aula1.R")
cidades
cidades[,1] <- cidades[1,]
cidades
cidades[,2] <- cidades[2,]
cidades
source("D:/Cursos/Pos_IA/linguagem_r/Aula1.R")
cidades
df <- data.frame(letras=letters[1:10],numeros=21:30,valores=rnorm(10))
df
df[5,]
x <- 5 / 0
x
log(10,2)
is.logical(TRUE)
is.logical(s)
is.logical(1)
is.logical(FALSE)
floor(9.32)
ceiling(9.32)
m <- seq(from = 10, to = 50, by = 2)
m
m <- seq(from = 10, to = 50, by = 2, length.out = 10)
m <- seq(from = 10, to = 50, length.out = 10)
m
m <- seq(from = 10, to = 50, along.with = 10)
m
m <- seq(from = 10, to = 50, length.out = 10)
m
m <- seq(from = 10, to = -50, length.out = 10)
m
m <- seq(from = 100, to = 50, length.out = 10)
m
vet <- c(TRUE,1L,10.2)
vet
as.integer((vet))
as.logical(vet)
vet[-1]
vet
vet[-3]
vet[-30]
vet[-2]
vet[-3]
vet <- 1:20
vet
vet[vet!=2%]
vet[vet!=2]
vet[vet!= vet%%2]
vet[vet!= (vet%%2==0)]
vet[vet %in% (vet%%2==0)]
vet[vet %in% (vet%%2)]
vet[vet %in% c(2,4)]
mean(vet)
A <- matrix(c(7,2,-5,9,1,0),3,2)
A
A <- matrix(c(5,1,8,0,-2,1),3,2)
A <- matrix(c(7,2,-5,9,1,0),3,2)
B <- matrix(c(5,1,8,0,-2,1),3,2)
b
B
C <- cbind(A,B)
C
C <- rbind(A,B)
C
vals <- sample(1:10,3)
vals
vals <- sample(1:10,3)
vals
vals <- sample(1:10,3)
vals
vals <- sample(1:10,3,replace = false)
vals <- sample(1:10,3,replace = FALSE)
vals
vals <- sample(1:10,3,replace = FALSE)
vals
vals <- sample(1:10,3,replace = FALSE)
vals
vals <- sample(1:5,3,replace = FALSE)
sample(1:5,3,replace = FALSE)
sample(1:5,3,replace = FALSE)
sample(1:5,3,replace = FALSE)
sample(1:5,3,replace = FALSE)
sample(1:5,3,replace = TRUE)
sample(1:5,3,replace = TRUE)
sample(1:5,3,replace = TRUE)
sample(1:5,3,replace = TRUE)
sample(1:5,3,replace = TRUE)
sample(1:5,3,replace = TRUE)
sample(1:5,3,replace = TRUE)
sample(1:5,3,replace = TRUE)
sample(1:5,3,replace = TRUE)
sample(1:5,3,replace = TRUE)
sample(1:5,3,replace = FALSE)
sample(1:5,3,replace = FALSE)
sample(1:5,3,replace = FALSE)
sample(1:5,3,replace = FALSE)
sample(1:5,3,replace = FALSE)
sample(1:5,3,replace = FALSE)
sample(1:5,3,replace = FALSE)
sample(1:3,3,replace = FALSE)
sample(1:3,3,replace = FALSE)
sample(1:3,3,replace = FALSE)
sample(1:3,3,replace = FALSE)
sample(1:3,3,replace = FALSE)
sample(1:3,3,replace = FALSE)
sample(1:3,3,replace = FALSE)
sample(1:3,3,replace = FALSE)
sample(1:3,3,replace = FALSE)
sample(1:5,3,replace = TRUE)
sample(1:5,3,replace = TRUE)
sample(1:5,3,replace = TRUE)
sample(1:5,3,replace = TRUE)
sample(1:5,3,replace = TRUE)
sample(1:5,3,replace = TRUE)
factor(c("verde","amarelo","amarelo","verde","azul","verde"))
factor(c("verde","amarelo","amarelo","verde","azul","Verde"))
car <- read.csv(file = "carros.csv")
car <- read.csv(file = "D:\Cursos\Pos_IA\linguagem_r\carros.csv")
car <- read.csv(file = "D:\\Cursos\\Pos_IA\\linguagem_r\\carros.csv")
car <- read.csv(file = "D:\\Cursos\\Pos_IA\\linguagem_r\\carros.csv")
car
car <- read.csv(file = "D:\\Cursos\\Pos_IA\\linguagem_r\\carros.csv", stringsAsFactors = FALSE)
car
formula <-y~ x1 + x2
formula
x <- list(1:5,"OI",TRUE,4L)
x
x[[1]][2]
x <- list(matrix(1:5,2,3),"OI",TRUE,4L)
x <- list(matrix(1:6,2,3),"OI",TRUE,4L)
x
shell("cls")
lista <- list("Carros"=c("Corcel","Astra","Vectra"),"Cores"=c("Azul","Verde","Branco"))
lista
listadf <- as.data.frame(lista)
listadf
df$"Modelo" <- character()
df$Modelo <- character()
listadf$"Modelo" <- character()
listadf$Modelo <- character()
listadf$Modelo <- character("")
listadf$Modelo <- character(3)
listadf
listadf$Ano <- character(ncol(listadf))
listadf
listadf <- as.data.frame(lista)
listadf
listadf$Ano <- integer(ncol(listadf))
listadf$Ano <- integer(ncol(listadf)+1)
listadf
str(listadf)
dfcsv <- read.csv("D:\\Cursos\\Pos_IA\\linguagem_r\\carros.csv")
dfcsv
dim(dfcsv)
rownames(dfcsv)
colnames(dfcsv)
str(dfcsv)
dfcsv[3]
dfcsv[,3]
dfcsv[3,]
dfcsv[3,,drop=TRUE]
dfcsv[3,,drop=FALSE]
dfcsv[3,,drop=TRUE]
dfcsv[3,,]
dfcsv[,2,]
dfcsv[,3,]
dfcsv[,3,drop=FALSE]
dfcsv[,3,drop=FALSE]
dfcsv[,3,]
dfcsv[,3,drop=TRUE]
dfcsv[,3]
dfcsv[,c(2,3)]
dfcsv
dfcsv[,c(2,3)]
dfcsv[3,c(2,3)]
dfcsv$cor
df$ano
dfcsv$ano
dfcsv[1]
dfcsv[[1]
]
dfcsv[[2]]
dfcsv[2]
dfcsv[2]
dfcsv[,2]
dfcsv[which(ano>2000)]
dfcsv[which(dfcsv[,ano]>2000)]
dfcsv[which(dfcsv[,ano,]>2000)]
dfcsv
dfcsv[which(dfcsv[,4]>2000)]
dfcsv[which(dfcsv[,5]>2000)]
dfcsv[which(dfcsv[,5]>2000)]
which(dfcsv$ano > 2000)
dfcsv[which(dfcsv$ano > 2000)
]
dfcsv[which(dfcsv$ano > 2000)]
dfcsv[which(dfcsv$ano > 2000),]
dfcsv[which(dfcsv$ano > 2000),]
dfcsv[dfcsv$ano > 2000,]
dfcsv[dfcsv$cor %in% "azul"]
dfcsv[dfcsv$cor %in% "azul",]
dfcsv[dfcsv$tipo %in% "suv",]
dfcsv[dfcsv$tipo %in% "suve",]
dfcsv[dfcsv$tipo %in% "suv",]
shell("cls")
df <- data.frame(letras=letters[1:10],numeros=21:30,valores=rnorm(10))
df[5,]
df[,2,drop=FALSE]
df
df[,c(2,3)]
df[6,c(1,3)]
df[which(df$valores > 0,)]
df[df$valores > 0,]
df[df$numeros%%2 != 0,]
df[df$valores > 0 & df$numeros%%2 == 0,]
df[df$letras %in% c("b","g","h")]
df[df$letras %in% c("b","g","h"),]
df[df$letras %in% c("b","g","h"),]
shell("cls")
dfCidades <- data.frame(nome=c("João","Maria","José"),cidade=(1,3,4))
dfCidades <- data.frame(nome=c("João","Maria","José"),cidade=c(1,3,4))
dfcidades
dfCidades
dfNomes <- data.frame(nome=c("João","Maria","José"),cidade=c(1,3,4))
dfCidades <- data.frame(id=c(1,2,3),nomeCidade=c("Matinhos","Caioba","Cananeia"))
dfNomes
dfCidades
merge(dfNomes,dfCidades,by=NULL)
merge(dfNomes,dfCidades,by=id)
merge(dfNomes,dfCidades,by=cidade)
dfCidades <- data.frame(idCidade=c(1,2,3),nomeCidade=c("Matinhos","Caioba","Cananeia"))
dfNomes <- data.frame(nome=c("João","Maria","José"),idCidade=c(1,3,4))
merge(dfNomes,dfCidades,by=idCidade)
merge(dfNomes,dfCidades,by="idCidade")
merge(dfNomes,dfCidades,by="idCidade",all=TRUE)
merge(dfNomes,dfCidades,by="idCidade",all.x =TRUE)
merge(dfNomes,dfCidades,by="idCidade",all.y =TRUE)
shell("cls")
df1 <-data.frame(nome=c("Razer", "Anthom", "Nizer", "Rojas", "Montaño"), cidadeId=c(3, 10, 2, 3, 1))
cidades <-data.frame(cidadeId=c(1, 2, 3, 4), cidade=c("Curitiba", "SJP", "Pinhais", "Colombo"))
df1 <-data.frame(nome=c("Razer", "Anthom", "Nizer", "Rojas", "Montaño"), cidadeId=c(3, 10, 2, 3, 1))
cidades <-data.frame(cidadeId=c(1, 2, 3, 4), cidade=c("Curitiba", "SJP", "Pinhais", "Colombo"))
cidade
cidades
df1
merge(df1,cidades,by=NULL)
merge(df1,cidades,by=cidadeId)
merge(df1,cidades,by="cidadeId")
merge(df1,cidades,by="cidadeId",all=TRUE)
merge(df1,cidades,by="cidadeId",all.x=TRUE)
merge(df1,cidades,by="cidadeId",all,y=TRUE)
merge(df1,cidades,by="cidadeId",all.y=TRUE)
shell("cls")
n <- 10
sexo <- sample(c("M","F"),n)
sexo <- sample(c("M","F"),n,replace=TRUE)
idade <- sample(20:50,n)
peso <- sample(75:110,n)
idade <- sample(10:50,n)
menor <- idade<18
menor
idade
pessoa <-data.frame(sexo=sexo,idade=idade,peso=peso,idade=idade,menor=menor)
pessoa
pessoa <-data.frame(sexo=sexo,idade=idade,peso=peso,menor=menor)
pessoa
pessoa[order(pessoa$idade),]
pessoa[order(pessoa$peso),]
pessoa[order(-pessoa$peso),]
shell("cls")
n<-10
sexo <-sample( c("masculino", "feminino"), n, replace=TRUE)
idade <-sample( 14:102, n, replace=TRUE)> peso <-sample( 50:90, n, replace=TRUE)
menor <-idade<18
pessoas <-data.frame(sexo=sexo, idade=idade, peso=peso, menor=menor, stringsAsFactors=FALSE)
shell("cls")
n<-10
sexo <-sample( c("masculino", "feminino"), n, replace=TRUE)
idade <-sample( 14:102, n, replace=TRUE)
peso <-sample( 50:90, n, replace=TRUE)
menor <-idade<18
pessoas <-data.frame(sexo=sexo, idade=idade, peso=peso, menor=menor, stringsAsFactors=FALSE)
pessoas
x <- sample(1:50,10,replace=f)
x <- sample(1:50,10,replace=D)
x <- sample(1:50,10,replace=F)
x
max(x)
summary(x)
quantile(x)
order(x)
sort(x)
quantile(x)
sd(x)
data(BreastCancer)
install.packages("mlbench")
install.packages("mlbench")
data(BreastCancer)
library(mlbench)
data(BreastCancer)
BreastCancer
summary(BreastCancer)
print(svm)
shell("Cls")
table(iris$Species)
table(iris$Sepal.Length)
table(iris$Sepal.Length>10)
table(iris$Sepal.Length>100)
table(iris$Sepal.Length>3)
table(iris$Sepal.Length>5)
table(iris$Sepal.Length>4)
table(iris$Sepal.Length>4.6)
shell("Cls")
dados <-c(38, 15, 43, 85, 36, 15, 96, 35, 20, 29, 76, 39, 18, 14, 37, 39, 68, 63, 96, 86, 45, 89, 94, 60, 73, 60, 59, 73, 52, 32)
dados
interv <- seq(0,100,25)
interv
classes <- c("0-24","25-49","50-74","75-100")
cut(dados,breaks = interv,right = FALSE,labels = classes)
t <- table(cut(dados,breaks = interv,right = FALSE,labels = classes))
t
plot(t)
hist(t)
plot(t)
hist(t)
x <- rnorm(100)
y <- rnorm(100)
plot(c,y)
plot(x,y)
plot(x,y, type="l")
n_dados <- 100
v_temp <- sample(0:45, n_dados,dados <-c(38, 15, 43, 85, 36, 15, 96, 35, 20, 29, 76, 39, 18, 14, 37, 39, 68, 63, 96, 86, 45, 89, 94, 60, 73, 60, 59, 73, 52, 32))
v_temp <- sample(0:45, n_dados, replace=T)
v_obs <- 1:n_dados
df <- data.frame(observacao=v_obs,temperatura=v_temp)
df
plot(df$observacao,df$temperatura,type="l")
abline(h=mean(df$temperatura),col="blue")
barplot(df$temperatura,df$observacao)
df
install.packages("ggplot2")
import("ggplot2")
library("ggplot2")
func <- function(x){}
func <- function(x){
1/(1+exp(-x + 10))
}
func(10)
ggplot(data.frame(x=c(0,20)),aes(x=x)) + stat_function(fun=func,geom="line")
ggplot(data.frame(x=c(0,25)),aes(x=x)) + stat_function(fun=func,geom="line")
ggplot(data.frame(x=c(0,5)),aes(x=x)) + stat_function(fun=func,geom="line")
getwd()
setwd("D:\\Cursos\\Pos_IA\\linguagem_r")
getwd()
png(file="teste.png")
ggplot(data.frame(x=c(0,5)),aes(x=x)) + stat_function(fun=func,geom="line")
dev.off()
browseURL("teste.png")
ggplot(data.frame(x=c(0,25)),aes(x=x)) + stat_function(fun=func,geom="line")
#Slide 13 - Página 25
#Gere os gráficos em arquivos PDF e PNG
setwd("D:\\Cursos\\Pos_IA\\linguagem_r")
png(file="teste.png")
ggplot(data.frame(x=c(0,25)),aes(x=x)) + stat_function(fun=func,geom="line")
dev.off()
pdf(file="teste.pdf")
ggplot(data.frame(x=c(0,25)),aes(x=x)) + stat_function(fun=func,geom="line")
dev.off()
shell("cls")
x<-c(40, 30, 30, 25, 50, 60, 65, 10, 15, 20, 55, 40, 35, 30)y<-c(1000, 1500, 1200, 1800, 800, 1000, 500, 3000, 2500, 2000, 800, 1500, 2000, 2000)
x<-c(40, 30, 30, 25, 50, 60, 65, 10, 15, 20, 55, 40, 35, 30)
y<-c(1000, 1500, 1200, 1800, 800, 1000, 500, 3000, 2500, 2000, 800, 1500, 2000, 2000)
x
y
modelo <- lm(y ~ x)
modelo
plot(modelo)
plot(modelo)
summary(modelo)
str(modelo)
modelo$coefficients
coef(modelo)
novosdados <- data.frame(x=c(10,20,30))
predict(modelo,novosdados)
resid(modelo)
venda <- function(v){
return (2933.59723 - 38.55517*v)
}
venda(10)
venda(40)
plot(x=x,y=y,xlab="Kms",ylab="Euros")
abline(modelo)
abline(modelo,col="cyan")
abline(modelo,col="cyan")
plot(resid(modelo))
abline(resid(modelo))
abline(0,0)
shell("cmd")
shell("cls")
dados <- read.csv("GAGurine.csv")
dados
dados <- x=NULL
dados
typeof(dados)
dados <- dados[-x]
dados
dados <- dados[-X]
tail(dados)
dados$X <-NULL
dados
modelo <- lm(dados$GAG ~ dados$Age)
modelo
modelo
func <- function(x) {}
func <- function(x) {
return (19.894 - 1.273*x)
}
func(17.67)
func(17.30)
func(13.13)
func(0.06)
resid(modelo)
dados
predict(modelo,data.frame(c=(17.90,18.0,18.5)))
predict(modelo,data.frame(Age=c(17.90,18.0,18.5)))
predict(modelo,data.frame(Age=c(17.90,18.0,18.5)))
modelo
novos <- data.frame(Age=c(18,19,20))
novos
predict(modelo,novos)
plot(x=dados$Age,y=dados$GAG,xlab = "Age",ylab = "GAG")
abline(modelo,col="red")
plot(resid(modelo))
abline(0,0,col="red")
shell("cls")
dados <- data.frame(idade=c(22.1,22.3,22.7,24.1,24.5,25.1),tam.pe=c(37.1,37.1,36.9,37.3,37.2,36.9))
dados
plot(dados$idade,dados$tam.pe)
modelo <- lm(dados$tam.pe,dados$idade)
modelo <- lm(dados$tam.pe ~dados$idade)
modelo
func <- function(x) {
func <- function(x) {retunr
func <- function(x) {
}
dsa
;
}
}
func <- function(x) {
return(36.916136 + 0.007125 * x)
}
func(30)
func(25)
func(22)
plot(dados$idade,dados$tam.pe)
abline(modelo)
resid(modelo)
plot(resid(modelo))
abline(0,0)
shell("cls")
dados <- read.csv("CoolingWater.csv")
dados
modelo <-lm(temp~ poly(time, 2, raw=TRUE), data=dados)
modelo
modelo <-lm(temp ~ poly(time, degree=2), data=dados)
plot(dados$temp ~ dados$time)
predicao <- predict(modelo,dados)
predicao
lines(y=predicao,x=dados$time, type="l", col="red")
dados <- read.csv("CoolingWater.csv")
#Grau 2
modelo <-lm(temp ~ poly(time, degree=2), data=dados)
plot(dados$temp ~ dados$time)
predicao <- predict(modelo,dados)
lines(y=predicao,x=dados$time, type="l", col="red")
dados <- read.csv("CoolingWater.csv")
#Grau 2
modelo <-lm(temp ~ poly(time, degree=2), data=dados)
plot(dados$temp ~ dados$time)
predicao <- predict(modelo,dados)
lines(y=predicao,x=dados$time, type="l", col="red")
modelo <-lm(temp ~ poly(time, degree=3), data=dados)
plot(dados$temp ~ dados$time)
predicao <- predict(modelo,dados)
lines(y=predicao,x=dados$time, type="l", col="red")
modelo <-lm(temp ~ poly(time, degree=3), data=dados)
plot(dados$temp ~ dados$time)
predicao <- predict(modelo,dados)
lines(y=predicao,x=dados$time, type="l", col="red")
modelo <-lm(temp ~ poly(time, degree=2), data=dados)
plot(dados$temp ~ dados$time)
predicao <- predict(modelo,dados)
lines(y=predicao,x=dados$time, type="l", col="red")
modelo <-lm(temp ~ poly(time, degree=4), data=dados)
plot(dados$temp ~ dados$time)
predicao <- predict(modelo,dados)
lines(y=predicao,x=dados$time, type="l", col="red")
plot(cars)
plot(cars)
plot(cars)
